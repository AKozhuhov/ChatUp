pid         logs/nginx.pid;
error_log   stderr debug;

daemon              off;
worker_rlimit_core  2500M;
working_directory /tmp;

worker_processes    auto;
worker_rlimit_nofile 600000;

events {
    worker_connections  200000;
    use epoll;
    multi_accept on;
}

http {
    access_log      logs/nginx-http_access.log;

    push_stream_shared_memory_size                300m;
    push_stream_max_channel_id_length             200;
    # ping frequency
    push_stream_ping_message_interval             30s;
    # The TTL is disabled for the moment because ping messages are not being sent
    # https://github.com/wandenberg/nginx-push-stream-module/issues/190
    # push_stream_subscriber_connection_ttl         15m;
    # connection ttl for long polling
    push_stream_longpolling_connection_ttl        30s;
    push_stream_timeout_with_body                 off;

    push_stream_max_messages_stored_per_channel   100;
    push_stream_store_messages                    on;

    # subscriber may create channels on demand or only authorized (publisher) may do it?
    push_stream_authorized_channels_only        off;

    push_stream_allowed_origins                 "*";

    push_stream_message_template                "~time~.~channel~.~text~";

    server {
        listen          42631;
        # if over ssl:
        # listen        42638 ssl;
        # ssl_certificate     /var/certs/cert.crt;
        # ssl_certificate_key /var/certs/key.key;

        # else
        listen          42632;
        listen          80;

        server_name     localhost;

        location /socket.io {
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_pass http://127.0.0.1:42633;
        }

        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path               $arg_id;

            allow   127.0.0.1;
            deny    all;
        }

        location /pub {
            # activate publisher mode for this location, with admin support
            push_stream_publisher admin;

            # query string based channel id
            push_stream_channels_path               $arg_id;

            # Message size limit
            # client_max_body_size MUST be equal to client_body_buffer_size or
            # you will be sorry.
            client_max_body_size                    32k;
            client_body_buffer_size                 32k;

            allow   127.0.0.1;
            deny    all;
        }

        location ~ /sub/(.*) {
            # activate subscriber mode for this location
            push_stream_subscriber;

            # positional channel path
            push_stream_channels_path                   $1;
            push_stream_last_received_message_time      "$arg_time";
        }

        location ~ /ev/(.*) {
            # activate event source mode for this location
            push_stream_subscriber eventsource;

            # positional channel path
            push_stream_channels_path                   $1;
            push_stream_last_received_message_time      "$arg_time";
        }

        location ~ /lp/(.*) {
            # activate long-polling mode for this location
            push_stream_subscriber      long-polling;

            # positional channel path
            push_stream_channels_path         $1;
            push_stream_last_received_message_time      "$arg_time";
        }

        location ~ /jsonp/(.*) {
            # activate long-polling mode for this location
            push_stream_subscriber      long-polling;

            push_stream_channels_path         $1;
            push_stream_last_received_message_time      "$arg_time";
        }

        location ~ /ws/(.*) {
            # activate websocket mode for this location
            push_stream_subscriber websocket;

            # positional channel path
            push_stream_channels_path                   $1;
            push_stream_last_received_message_time      "$arg_time";
        }
    }
}
